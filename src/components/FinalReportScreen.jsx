import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAppContext } from '../App';
import { calculateBasadurProfile } from '../utils/calculations';
import { quadrantThemes, quadrantNames } from '../data/wordSets';
import RadarChart from './common/RadarChart';
import Button from './common/Button';

const FinalReportScreen = () => {
  const navigate = useNavigate();
  const { state, dispatch, wordSets } = useAppContext();
  const [results, setResults] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Calculate results when component mounts
    if (state.userRankings && Object.keys(state.userRankings).length > 0) {
      try {
        const calculatedResults = calculateBasadurProfile(state.userRankings, wordSets);
        setResults(calculatedResults);
        
        // Save results to global state
        dispatch({
          type: 'SET_CALCULATED_RESULTS',
          payload: calculatedResults
        });
        
        setIsLoading(false);
      } catch (error) {
        console.error('Error calculating profile:', error);
        // Redirect back to start if calculation fails
        navigate('/');
      }
    } else {
      // No rankings found, redirect to start
      navigate('/');
    }
  }, [state.userRankings, wordSets, dispatch, navigate]);

  const handleDownloadReport = () => {
    // Create a simple text report for download
    if (results && state.userName) {
      const reportContent = generateReportContent();
      const blob = new Blob([reportContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${state.userName}_Basadur_Profile.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
  };

  const handleTakeTestAgain = () => {
    // Clear state and return to landing
    dispatch({ type: 'RESET_STATE' });
    navigate('/');
  };

  const generateReportContent = () => {
    const date = new Date().toLocaleDateString();
    const dominant = results.sortedQuadrants[0];
    
    return `BASADUR PROFILE REPORT
Generated: ${date}
Name: ${state.userName}

RESULTS SUMMARY:
${dominant.percentage}% ${quadrantNames[dominant.quadrant]}

DETAILED BREAKDOWN:
${results.sortedQuadrants.map(q => 
  `${quadrantNames[q.quadrant]}: ${q.percentage}%`
).join('\n')}

RADAR CHART DATA:
Ideation: ${results.radarData.ideation}%
Experiencing: ${results.radarData.experiencing}%
Evaluation: ${results.radarData.evaluation}%
Thinking: ${results.radarData.thinking}%

About your dominant profile - ${quadrantNames[dominant.quadrant]}:
${getProfileDescription(dominant.quadrant)}

Generated by Basadur Profile Assessment Tool
Visit: [Your App URL]`;
  };

  const getProfileDescription = (quadrant) => {
    const descriptions = {
      generator: "thrives on fresh questions and endless 'what-ifs.'",
      conceptualizer: "turns big messy thoughts into sharp, shareable ideas.",
      optimizer: "loves stress-testing concepts until the plan feels bulletproof.",
      implementer: "learns through direct involvement and personal experience."
    };
    return descriptions[quadrant] || '';
  };

  if (isLoading || !results) {
    return (
      <div style={{
        minHeight: '100vh',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        fontSize: '18px',
        color: '#5E5E5E'
      }}>
        Calculating your profile...
      </div>
    );
  }

  const dominantQuadrant = results.dominantQuadrant;
  const theme = quadrantThemes[dominantQuadrant];
  const dominantResult = results.sortedQuadrants[0];
  const secondaryResults = results.sortedQuadrants.slice(1);

  return (
    <div className="final-report-screen" style={{
      minHeight: '100vh',
      backgroundColor: '#FFFFFF',
      padding: '20px',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      fontFamily: 'IBM Plex Sans, sans-serif'
    }}>
      
      {/* Header */}
      <h1 style={{
        fontSize: '24px',
        fontWeight: '300',
        color: '#5E5E5E',
        textAlign: 'center',
        marginBottom: '32px'
      }}>
        {state.userName ? `${state.userName}'s Basadur Profile` : 'Your Basadur Profile'}
      </h1>

      {/* Main Report Card */}
      <div style={{
        backgroundColor: theme.dark,
        borderRadius: '24px',
        padding: '40px',
        maxWidth: '600px',
        width: '100%',
        boxShadow: '0 12px 32px rgba(0,0,0,0.15)'
      }}>
        
        {/* Radar Chart */}
        <div style={{ marginBottom: '40px' }}>
          <RadarChart
            data={results.radarData}
            theme={theme}
          />
        </div>

        {/* Results Summary */}
        <div style={{
          display: 'flex',
          alignItems: 'center',
          gap: '40px',
          marginBottom: '32px',
          flexWrap: 'wrap'
        }}>
          
          {/* Dominant Quadrant */}
          <div style={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            flex: '1',
            minWidth: '200px'
          }}>
            <div style={{
              fontSize: '64px',
              fontWeight: 'bold',
              color: theme.bright,
              lineHeight: '1',
              marginBottom: '8px'
            }}>
              {dominantResult.percentage}%
            </div>
            <div style={{
              fontSize: '24px',
              fontWeight: 'bold',
              color: theme.bright,
              letterSpacing: '1px',
              textAlign: 'center'
            }}>
              {quadrantNames[dominantResult.quadrant]}
            </div>
          </div>

          {/* Secondary Quadrants */}
          <div style={{
            display: 'flex',
            flexDirection: 'column',
            gap: '12px',
            flex: '1',
            minWidth: '200px'
          }}>
            {secondaryResults.map((result, index) => (
              <div key={result.quadrant} style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                fontSize: '16px',
                color: 'rgba(255, 255, 255, 0.8)'
              }}>
                <span>{result.percentage}%</span>
                <span style={{ letterSpacing: '0.5px' }}>
                  {quadrantNames[result.quadrant]}
                </span>
              </div>
            ))}
          </div>
        </div>

        {/* Action Buttons */}
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '16px',
          alignItems: 'center'
        }}>
          
          {/* Download Report Button */}
          <Button
            onClick={handleDownloadReport}
            variant="themed"
            icon="ðŸ“„"
            style={{
              backgroundColor: theme.bright,
              color: theme.dark,
              fontSize: '16px',
              padding: '16px 32px',
              minWidth: '250px'
            }}
          >
            Download report
          </Button>

          {/* Take Test Again Button */}
          <Button
            onClick={handleTakeTestAgain}
            variant="themed"
            icon="ðŸ”„"
            style={{
              backgroundColor: 'transparent',
              color: 'rgba(255, 255, 255, 0.8)',
              border: `2px solid rgba(255, 255, 255, 0.3)`,
              fontSize: '16px',
              padding: '16px 32px',
              minWidth: '250px'
            }}
          >
            Take test again
          </Button>
        </div>
      </div>

      {/* Footer */}
      <footer style={{
        marginTop: '40px',
        textAlign: 'center',
        color: '#B7B7B7',
        fontSize: '14px'
      }}>
        <p>Generated by Basadur Profile Assessment</p>
        <p style={{ marginTop: '8px' }}>
          Understanding your thinking style helps improve team collaboration
        </p>
      </footer>
    </div>
  );
};

export default FinalReportScreen; 